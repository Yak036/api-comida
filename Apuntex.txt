// Concepto del curso
En este curso se realizara una REST API para una pagina web, la api tendra como tematica la comida, podran ver ingredientes, comida, instrucciones para cocinar, imagenes y categorias, esta api tendra filtrado

-> REST: Es un principio y convenciones para llevar una api de forma profesional mediante los metodos POST PUT DELETE GET

  Temas a tratar:
  - Uso de RESTFull
  - Respuesta estandar
  - Versionado de api
  - inicio de sesion y autorizacion
  - validacion de datos
  - Organizacion de la logica
  - Separacion de recursos
  - Manejo adecuado de errores
  - Documentacion y testing
  - Paginacion

// HTTP Status Codes
  Nos da un spoiler de lo que paso con nuestra solicitud mediante codigos como 404, 200,100, etc...
  2xx: Significa q todo va bien
  3xx: Redirecciones correctas o incorrectas.(no sabes si esta bien o mal solo redirecciona)
  4xx: Son los errores, hicimos algo mal.
  5xx: El backend murio, pueden ser varias razones, varias solicitudes o servidor caido.
  ////////////////////////////
    1XX Respuestas Afirmativas
    2XX Respuestas satisfactorias
    3XX Re-direcciones
    4XX Error del cliente
    5XX Error de servidor
  ////////////////////////////

-> Que son los metodos HTTP?
  Son la forma en la que realizas una solicitud, desde el frontend al backend
    -GET: Leer o visualizar
    -POST: Crear datos
    -PUT PATH: Editar datos, todos los registros o un registro en especifico
    -DELETE: Eliminar datos.


    ///////////////////////////////
      Inicio de proyecto
    ///////////////////////////////

-------------------------------------
  Con este comando inicializas con una version en especifico
  composer create-project laravel/laravel:^10.2.4
  
  Crear el model, migraciones y Factories.
  php artisan make:model Category -mf

  Crear tabla puente muchos a muchos (el nombre debe ser alfabeticamente y en singular)
  php artisan make:migration create_recipe_tag_table
-----------------------------------


////////////////////////
inicio de proyecto
Configurar los datos falsos y migraciones es delicado, hay muchos metodos y funciones que desconozco debo investigar mas al respecto

con teste comando migras y activas los seeders
php artisan migrate --seed


/////////////////////////
Recurso: representa al dato que quieres obtener de la base de datos, los recursos deben estar aislados no debes manipular lo que trae la DB desde el controllador pueden traer datos de multiples tablas
creas los recursos con
php artisan make:resource CategoryResource

los Collection traen los datos de una unica tabla



Recursos anidados, puedes combinar recursos, digamos que tienes una relacion de tags y dentro de esta la relacion con las recipes, puedes importar el recurso de recipes y usarlo para llamar a recipes con el mismo formato

/////////////////////////////////
Probar si el codigo esta bien: una libreria de laravel se encarga de esto

con esto la descargas
sudo composer require laravel/telescope

Y con esto la installas
php artisan telescope:install

para obtimizar el codigo es bueno que en el controlador a la hora de retornar especifiques con que tabla vas a trabajar 

public function index(){
        //? se usa all() para traerlo todo y get() para algo mas personalizado
        return RecipesResource::collection(Recipe::with('category','tags','user')->get());
    }

///////////////////////////////
Creacion de datos
///////////////////////////
public function store(Request $request){
    //? vas a crear el recipe y devolveras la respuesta de todo lo que creaste
    $recipe = Recipe::create($request->all());

    //? devuelves la respuesta junto a su estado HTTP, debes importar use 
    //? Symfony\Component\HttpFoundation\Response; 
    //? para las respuestas HTTP
    return response()->json(new RecipesResource($recipe), Response::HTTP_CREATED);// http 201
}
\
Al momento de hacer validaciones de formularios usas este comando
 php artisan make:request StoreRecipeRequest
especificas que metodo va a afectar en el nombre, el nombre del modelo y Request
Dentro de ese archivo cambias el authorized de True a False

///////////////////////////
Autenticacion && autorizacion
La autentificacion verifica quien eres y verifica tus credenciales

La autorizacion gestiona permisos

para las autentificaciones usas el mismo recurso del curso pasado sanctum
sudo composer require laravel/sanctum